{"version":3,"sources":["../src/convertTorrentsToStreams.js"],"names":["MIN_SEEDERS","STREAMS_PER_CATEGORY","makeDetailsString","prefix","args","string","filter","arg","i","indexOf","join","undefined","isEligibleTorrent","torrent","torrentsByCategory","category","seeders","languages","torrentToStream","magnetLink","audio","infoHash","name","magnet","decode","resolution","quality","videoDetails","audioDetails","seedersDetails","tag","title","v","availability","convertTorrentsToStreams","torrents","map"],"mappings":";;;;;;;AAAA;;AACA;;;;AAGA,MAAMA,cAAc,CAApB;AACA,MAAMC,uBAAuB,CAA7B;;AAGA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC,GAAGC,IAAtC,EAA4C;AAC1C,MAAIC,SAASD,KACVE,MADU,CACH,CAACC,GAAD,EAAMC,CAAN,KAAYD,OAAOH,KAAKK,OAAL,CAAaF,GAAb,MAAsBC,CADtC,EAEVE,IAFU,CAEL,GAFK,CAAb;AAGA,SAAOL,SAAU,GAAEF,MAAO,IAAGE,MAAO,EAA7B,GAAiCM,SAAxC;AACD;;AAED,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,kBAApC,EAAwD;AACtD,MAAI;AAAEC,YAAF;AAAYC,cAAU,CAAtB;AAAyBC,gBAAY;AAArC,MAA4CJ,OAAhD;;AAEA,MAAIG,UAAUhB,WAAd,EAA2B;AACzB,WAAO,KAAP;AACD;;AAEDc,qBAAmBC,QAAnB,IAA+BD,mBAAmBC,QAAnB,KAAgC,CAA/D;AACAD,qBAAmBC,QAAnB;AACA,SAAOD,mBAAmBC,QAAnB,KAAgCd,oBAAvC;AACD;;AAED,SAASiB,eAAT,CAAyBL,OAAzB,EAAkC;AAChC,MAAI;AAAEM,cAAF;AAAcJ,YAAd;AAAwBC,WAAxB;AAAiCI,SAAjC;AAAwCH,gBAAY;AAApD,MAA2DJ,OAA/D;;AACA,MAAI;AAAEQ,YAAF;AAAYC;AAAZ,MAAqBC,mBAAOC,MAAP,CAAcL,UAAd,CAAzB;;AACA,MAAI;AAAEM,cAAF;AAAcC;AAAd,MAA0B,gCAAiBJ,IAAjB,CAA9B;AACA,MAAIK,eAAezB,kBAAkB,IAAlB,EAAwBa,QAAxB,EAAkCU,UAAlC,EAA8CC,OAA9C,CAAnB;AACA,MAAIE,eAAe1B,kBAAkB,IAAlB,EAAwBkB,KAAxB,EAA+B,GAAGH,SAAlC,CAAnB;AACA,MAAIY,iBAAiB3B,kBAAkB,IAAlB,EAAwBc,OAAxB,CAArB;AACA,MAAIc,MAAML,aAAa,CAACA,UAAD,CAAb,GAA4Bd,SAAtC;AACA,MAAIoB,QAAQ,CAACJ,YAAD,EAAeC,YAAf,EAA6BC,cAA7B,EACTvB,MADS,CACD0B,CAAD,IAAOA,CADL,EAETtB,IAFS,CAEJ,IAFI,CAAZ,CARgC,CAUlB;;AACd,MAAIuB,eAAe,CAAnB;;AAEA,MAAIjB,WAAW,EAAf,EAAmB;AACjBiB,mBAAe,CAAf;AACD,GAFD,MAEO,IAAIjB,WAAW,EAAf,EAAmB;AACxBiB,mBAAe,CAAf;AACD,GAFM,MAEA,IAAIjB,OAAJ,EAAa;AAClBiB,mBAAe,CAAf;AACD;;AAED,SAAO;AAAEH,OAAF;AAAOG,gBAAP;AAAqBF,SAArB;AAA4BV;AAA5B,GAAP;AACD;;AAED,SAASa,wBAAT,CAAkCC,QAAlC,EAA4C;AAC1C,MAAIrB,qBAAqB,EAAzB;AACA,SAAOqB,SACJ7B,MADI,CACIO,OAAD,IAAaD,kBAAkBC,OAAlB,EAA2BC,kBAA3B,CADhB,EAEJsB,GAFI,CAEAlB,eAFA,CAAP;AAGD;;eAGcgB,wB","sourcesContent":["import magnet from 'magnet-uri'\nimport parseTorrentName from 'torrent-name-parser'\n\n\nconst MIN_SEEDERS = 0\nconst STREAMS_PER_CATEGORY = 2\n\n\nfunction makeDetailsString(prefix, ...args) {\n  let string = args\n    .filter((arg, i) => arg && args.indexOf(arg) === i)\n    .join(' ')\n  return string ? `${prefix} ${string}` : undefined\n}\n\nfunction isEligibleTorrent(torrent, torrentsByCategory) {\n  let { category, seeders = 0, languages = [] } = torrent\n\n  if (seeders < MIN_SEEDERS) {\n    return false\n  }\n\n  torrentsByCategory[category] = torrentsByCategory[category] || 0\n  torrentsByCategory[category]++\n  return torrentsByCategory[category] <= STREAMS_PER_CATEGORY\n}\n\nfunction torrentToStream(torrent) {\n  let { magnetLink, category, seeders, audio, languages = [] } = torrent\n  let { infoHash, name } = magnet.decode(magnetLink)\n  let { resolution, quality } = parseTorrentName(name)\n  let videoDetails = makeDetailsString('ðŸ“º', category, resolution, quality)\n  let audioDetails = makeDetailsString('ðŸ”‰', audio, ...languages)\n  let seedersDetails = makeDetailsString('ðŸ‘¤', seeders)\n  let tag = resolution ? [resolution] : undefined\n  let title = [videoDetails, audioDetails, seedersDetails]\n    .filter((v) => v)\n    .join(', ') // The Stremio app seems to replace commas with line breaks\n  let availability = 0\n\n  if (seeders >= 50) {\n    availability = 3\n  } else if (seeders >= 20) {\n    availability = 2\n  } else if (seeders) {\n    availability = 1\n  }\n\n  return { tag, availability, title, infoHash }\n}\n\nfunction convertTorrentsToStreams(torrents) {\n  let torrentsByCategory = {}\n  return torrents\n    .filter((torrent) => isEligibleTorrent(torrent, torrentsByCategory))\n    .map(torrentToStream)\n}\n\n\nexport default convertTorrentsToStreams\n"],"file":"convertTorrentsToStreams.js"}